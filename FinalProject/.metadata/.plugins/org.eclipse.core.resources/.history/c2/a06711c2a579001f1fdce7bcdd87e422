package com.entity;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
public class Discounts {
	@Id
	private Long discountId;
	private String discountCode;
	private int discountPercentage;
	private Double applicabilityAmountLimit;
}

import org.springframework.web.reactive.function.client.WebClient;
import com.fasterxml.jackson.databind.ObjectMapper;

public class DiscountClient {
    private final WebClient.Builder builder;

    public DiscountClient(WebClient.Builder builder) {
        this.builder = builder;
    }

    public List<Discounts> getApplicableDiscounts(Double totalAmount) {
        ObjectMapper mapper = new ObjectMapper();
        String discountsURL = "http://localhost:8083/discounts/getApplicableDiscounts";

        // Create the request body
        DiscountRequest requestBody = new DiscountRequest();
        requestBody.setTotalAmount(totalAmount);

        List<Discounts> applicableDiscountsList = builder.build()
                .post()  // Use post() instead of get()
                .uri(discountsURL)
                .bodyValue(requestBody)  // Set the request body
                .retrieve()
                .bodyToFlux(Discounts.class)
                .collectList()
                .block();

        return applicableDiscountsList;
    }
}